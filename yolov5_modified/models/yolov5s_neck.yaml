# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 6  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

#  - [ 10,13, 16,30, 33,23 ]  # P3/8
#  - [ 30,61, 62,45, 59,119 ]  # P4/16
#  - [ 116,90, 156,198, 373,326 ]  # P5/32


# YOLOv5 backbone
# yolov5s-mamba.yaml
#backbone:
#  [[-1, 1, Focus, [64, 3]],          # 0-P1/2 (输出64)
#   [-1, 1, Conv, [128, 3, 2]],       # 1-P2/4 (输出128)
#   [-1, 3, C3, [128]],               # 2 (输出128)
#   [-1, 1, Conv, [256, 3, 2]],       # 3-P3/8 (输出256)
#   [-1, 9, C3, [256]],               # 4 (输出256)
#   [-1, 1, Conv, [512, 3, 2]],       # 5-P4/16 (输出512)
#   [-1, 9, C3, [512]],               # 6 (输出512)
#   [-1, 1, Conv, [1024, 3, 2]],      # 7-P5/32 (输出1024)
#   [-1, 1, SPP, [1024, [5, 9, 13]]], # 8 (输出1024)
#   [-1, 3, C3, [1024, False]],      # 9 (输出1024)
#  ]
backbone:
  [[-1, 1, Focus, [64, 3]],          # 0-P1/2 (输入通道=3, 输出通道=64, kernel_size=3)
   [-1, 1, MultiBranchConv, [128, 2]],  # 1-P2/4 (输出通道=128, stride=2)
   [-1, 3, C3, [128]],                # 输入通道=128
   [-1, 1, MultiBranchConv, [256, 2]],  # 3-P3/8 (输出通道=256, stride=2)
   [-1, 9, C3, [256]],                # 输入通道=256
   [-1, 1, MultiBranchConv, [512, 2]],  # 5-P4/16 (输出通道=512, stride=2)
   [-1, 9, C3, [512]],                # 输入通道=512
   [-1, 1, Conv, [1024, 3, 2]],      # 7-P5/32 (输出1024)
   [-1, 1, SPP, [1024, [5, 9, 13]]],  # 输入通道=1024
   [-1, 3, C3, [1024, False]],        #9
  ]


#head:
#  [[[3, 5, 7], 1, MambaNeck, [256]],  # 替换 PAN 结构
#   [-1,1,OutputBranch,[512]],
#   [-1,1,OutputBranch,[1024]],
#   [[10,11,12], 1, Detect, [nc, anchors, [256, 512, 1024]]]
#  ]  # Detect(P3, P4, P5)

head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, DeformFusion, [512, 512]],  # 输入顺序：(P3_low, P4_high)
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, DeformFusion, [256, 256]],  # 维度适配
   [-1, 3, C3, [256, False]],  # 17

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, DeformFusion, [256, 512]],  # 注意通道顺序
   [-1, 3, C3, [512, False]],  # 20

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, DeformFusion, [512, 1024]],  # 最终层适配
   [-1, 3, C3, [1024, False]],  # 23

   [[17, 20, 23], 1, Detect, [nc, anchors]],
  ]



# YOLOv5 🚀 by Ultralytics, GPL-3.0 license

# Parameters
nc: 6  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

## YOLOv5 backbone
backbone:
#  [[-1, 1, Focus, [64, 3]],          # 0-P1/2 (输入通道=3, 输出通道=64, kernel_size=3)
#   [-1, 1, MultiBranchConv, [128, 2]],  # 1-P2/4 (输出通道=128, stride=2)
#   [-1, 3, C3, [128]],                # 输入通道=128
#   [-1, 1, MultiBranchConv, [256, 2]],  # 3-P3/8 (输出通道=256, stride=2)
#   [-1, 9, C3, [256]],                # 输入通道=256
#   [-1, 1, MultiBranchConv, [512, 2]],  # 5-P4/16 (输出通道=512, stride=2)
#   [-1, 9, C3, [512]],                # 输入通道=512
#   [-1, 1, MultiBranchConv, [1024, 2]],#7-P5/32 (输出通道=1024, stride=2)
#   [-1, 1, SPP, [1024, [5, 9, 13]]],  # 输入通道=1024
#   [-1, 3, C3, [1024, False]],        #9
#  ]
#
# #  [from, number, module, args]原
  [[-1, 1, Focus, [64, 3]],  # 0-P1/2
   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4
   [-1, 3, C3, [128]],
   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8
   [-1, 9, C3, [256]],
   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16
   [-1, 9, C3, [512]],
   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32
   [-1, 1, SPP, [1024, [5, 9, 13]]],
   [-1, 3, C3, [1024, False]],  # 9
  ]
#
#########新增
##neck:
##  [-1, 1, MambaHRFusion, []] # 插入位置：替代原Neck结构
#
## YOLOv5 head
head:
  [[-1, 1, Conv, [512, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [512, False]],  # 13

   [-1, 1, Conv, [256, 1, 1]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
#
## 将Neck和Head分开定义   #  [[4,6,9], 1, MambaHRFusion, [ [ [256, 512, 1024], [256, 512, 1024] ] ] ]
##neck:  #[256, 512, 1024], [256, 512, 1024]]
##  [ [ -1, 1, MambaHRFusion, [[ 256 ]][[ 512 ]][[ 1024 ]] ] ]
##head:
##  [-1, 1, Detect, [nc, anchors]]  # 直接使用Neck输出
#
## YOLOv5s-Mamba 配置文件 (models/yolov5s.yaml)
#
## Neck部分
##neck:
##  - [[3, 5, 7], 1, MambaHRFusion,  [[256, 512, 1024],[256, 512, 1024]]   ] # 输入/输出通道列表
##
### Head部分（需与Neck输出通道匹配）
##head:
##  [[[-1], 1, Detect, [nc, anchors,[256,512,1024]]]]  # Detect层直接使用Neck输出
#


# Parameters
#nc: 80  # number of classes
#depth_multiple: 0.33  # model depth multiple
#width_multiple: 0.50  # layer channel multiple
#anchors:
#  - [10,13, 16,30, 33,23]  # P3/8
#  - [30,61, 62,45, 59,119]  # P4/16
#  - [116,90, 156,198, 373,326]  # P5/32
#
## YOLOv5 backbone
#backbone:
#  [[-1, 1, Focus, [64, 3]],          # 0-P1/2
#   [-1, 1, Conv, [128, 3, 2]],       # 1-P2/4
#   [-1, 3, C3, [128]],               # 2
#   [-1, 1, Conv, [256, 3, 2]],       # 3-P3/8
#   [-1, 9, C3, [256]],               # 4
#   [-1, 1, Conv, [512, 3, 2]],       # 5-P4/16
#   [-1, 9, C3, [512]],               # 6
#   [-1, 1, Conv, [1024, 3, 2]],      # 7-P5/32
#   [-1, 1, SPP, [1024, [5, 9, 13]]], # 8
#   [-1, 3, C3, [1024, False]],       # 9
#  ]
#
## Mamba Neck
#neck:
#  [[[9,6,4], 1, MambaHRFusion, [256, 512, 1024]]] # [out_p3, out_p4, out_p5]
#
#
## YOLOv5 Head
#head:
#  [[-1, 1, Detect, [nc, anchors]]]  # 使用Neck的三个输出层